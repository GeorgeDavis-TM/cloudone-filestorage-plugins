service: cloudone-fss-gcp-slack-notifications

custom:
  defaultStage: prod
  stages:
    prod:
      SLACK_URL: https://hooks.slack.com/services/<use-your-slack-url>
      SLACK_CHANNEL: notifications
      SLACK_USERNAME: Cloud One File Storage Security
      DEPLOYMENT_REGION: <gcp-deployment-region>
      GCP_PROJECT_ID: <gcp-project-id>
      EVENT_TYPE: providers/cloud.pubsub/eventTypes/topic.publish
      TRIGGER_RESOURCE: projects/<gcp-project-id>/topics/<scan-result-topic-name>

provider:
  name: google
  stage: ${opt:stage, self:custom.defaultStage}
  runtime: python39
  region: ${self:custom.stages.${opt:stage, self:custom.defaultStage}.DEPLOYMENT_REGION}
  project: ${self:custom.stages.${opt:stage, self:custom.defaultStage}.GCP_PROJECT_ID}
  # The GCF credentials can be a little tricky to set up. Luckily we've documented this for you here:
  # https://serverless.com/framework/docs/providers/google/guide/credentials/
  #
  # the path to the credentials file needs to be absolute
  # credentials: ~/Downloads/gcp-fss-03695d5bb5bf.json
  environment:
    SLACK_URL: ${self:custom.stages.${opt:stage, self:custom.defaultStage}.SLACK_URL}
    SLACK_CHANNEL: ${self:custom.stages.${opt:stage, self:custom.defaultStage}.SLACK_CHANNEL}
    SLACK_USERNAME: ${self:custom.stages.${opt:stage, self:custom.defaultStage}.SLACK_USERNAME}

frameworkVersion: '3'
plugins:
  - serverless-google-cloudfunctions

package:
  include:
    - "!node_modules/**"
    - "!docs/**"
    - "!.git/**"
  exclude:
    - README.md
    - .gitignore

functions:
  main:
    handler: main
    events:
      - event:
          eventType: ${self:custom.stages.${opt:stage, self:custom.defaultStage}.EVENT_TYPE}
          resource: ${self:custom.stages.${opt:stage, self:custom.defaultStage}.TRIGGER_RESOURCE}
